name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

jobs:
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Install gosec
      run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
      
    - name: Run Gosec Security Scanner
      run: gosec ./...
        
    - name: Install govulncheck
      run: go install golang.org/x/vuln/cmd/govulncheck@latest
      
    - name: Run govulncheck
      run: govulncheck ./...

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        
    - name: Install gocyclo
      run: go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
      
    - name: Check cyclomatic complexity
      run: gocyclo -over 15 .
      
    - name: Install ineffassign
      run: go install github.com/gordonklaus/ineffassign@latest
      
    - name: Check for ineffectual assignments
      run: ineffassign ./...
      
    - name: Install misspell
      run: go install github.com/client9/misspell/cmd/misspell@latest
      
    - name: Check for misspellings
      run: misspell -error .

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Run tests with coverage
      run: go test -coverprofile=coverage.out ./...
      
    - name: Generate coverage report
      run: go tool cover -html=coverage.out -o coverage.html
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html
        retention-days: 30
        
    - name: Check coverage threshold
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | tail -n 1 | awk '{print $3}' | sed 's/%//')
        echo "Coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 50" | bc -l) )); then
          echo "Coverage is below 50%"
          exit 1
        fi